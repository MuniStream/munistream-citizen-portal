# Runtime-configurable Dockerfile for multi-tenant deployment
FROM node:20-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Create .env file with placeholder values
RUN echo "VITE_API_URL=__VITE_API_URL__" > .env && \
    echo "VITE_KEYCLOAK_URL=__VITE_KEYCLOAK_URL__" >> .env && \
    echo "VITE_KEYCLOAK_REALM=__VITE_KEYCLOAK_REALM__" >> .env && \
    echo "VITE_KEYCLOAK_CLIENT_ID=__VITE_KEYCLOAK_CLIENT_ID__" >> .env && \
    echo "VITE_TENANT=__VITE_TENANT__" >> .env && \
    echo "VITE_TENANT_NAME=__VITE_TENANT_NAME__" >> .env && \
    echo "VITE_ORGANIZATION=__VITE_ORGANIZATION__" >> .env

# Build the app with placeholder values
RUN npm run build

# Production stage
FROM nginx:alpine

# Install sed for runtime replacement (already in alpine)
# Copy built files
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy and make entrypoint script executable
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

EXPOSE 80

# Use custom entrypoint for runtime configuration
ENTRYPOINT ["/docker-entrypoint.sh"]